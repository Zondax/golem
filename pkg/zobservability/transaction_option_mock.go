// Code generated by mockery. DO NOT EDIT.

package zobservability

import mock "github.com/stretchr/testify/mock"

// MockTransactionOption is an autogenerated mock type for the TransactionOption type
type MockTransactionOption struct {
	mock.Mock
}

type MockTransactionOption_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTransactionOption) EXPECT() *MockTransactionOption_Expecter {
	return &MockTransactionOption_Expecter{mock: &_m.Mock}
}

// ApplyTransaction provides a mock function with given fields: _a0
func (_m *MockTransactionOption) ApplyTransaction(_a0 Transaction) {
	_m.Called(_a0)
}

// MockTransactionOption_ApplyTransaction_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ApplyTransaction'
type MockTransactionOption_ApplyTransaction_Call struct {
	*mock.Call
}

// ApplyTransaction is a helper method to define mock.On call
//   - _a0 Transaction
func (_e *MockTransactionOption_Expecter) ApplyTransaction(_a0 interface{}) *MockTransactionOption_ApplyTransaction_Call {
	return &MockTransactionOption_ApplyTransaction_Call{Call: _e.mock.On("ApplyTransaction", _a0)}
}

func (_c *MockTransactionOption_ApplyTransaction_Call) Run(run func(_a0 Transaction)) *MockTransactionOption_ApplyTransaction_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(Transaction))
	})
	return _c
}

func (_c *MockTransactionOption_ApplyTransaction_Call) Return() *MockTransactionOption_ApplyTransaction_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockTransactionOption_ApplyTransaction_Call) RunAndReturn(run func(Transaction)) *MockTransactionOption_ApplyTransaction_Call {
	_c.Run(run)
	return _c
}

// NewMockTransactionOption creates a new instance of MockTransactionOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTransactionOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTransactionOption {
	mock := &MockTransactionOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
